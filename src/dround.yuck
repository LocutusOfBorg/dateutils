Usage: dateround [OPTION]... [DATE/TIME] RNDSPEC...

Round DATE/TIME to the next occurrence of RNDSPEC.

If DATE/TIME is omitted a stream of date/times is read from stdin.

DATE/TIME can also be one of the following specials
  - `now'           interpreted as the current (UTC) time stamp
  - `time'          the time part of the current (UTC) time stamp
  - `today'         the current date (according to UTC)
  - `tomo[rrow]'    tomorrow's date (according to UTC)
  - `y[ester]day'   yesterday's date (according to UTC)

1. RNDSPECs can be month names (Jan, Feb, ...), weekday names (Sun, Mon, ...),
   numerals suffixed with y, q, mo, d, bd, h, m, or s, possibly prefixed with
   a dash (`-`) to indicate the rounding direction is downwards.

2. Suffixed RNDSPECs may additionally be prefixed with a slash (`/`) to
   indicate that rounding to a multiple of RNDSPEC is desired.
   Co-class rounding.

In the first case, rounding affects the named element in the specified date
or date/time and more significant elements by setting this element to the
specified value and adjusting the more significant elements such that the
result is greater (younger) or equal to the input (or strictly greater when
-n|--next is given) for positive values, and less (older) or equal (unless
-n|--next is given) for named elements that are prefixed with dash (`-`).
In either case, less significant elements, e.g. subdivisions of the named
element and their subdivisions are left unchanged.

    That is     dateround 2019-01-28T12:04:00 +6
    will yield  2019-02-06T12:04:00

    Similarly   dateround -n 2019-01-28T12:04:00 -- -Oct
    will yield  2018-10-28T12:04:00

In the second case, rounding is more like rounding decimal fractions to
negative infinity.  The time axis is partitioned by multiples of the named
element, and the oldest date or datetime is returned that is greater (younger)
(or equal if -n|--next is omitted) than the specified date or date/time,
when rounding down (`-` prefix) the oldest date or datetime is returned
that is less (older) than the specified date or datetime.

    That is     dateround 2019-01-28T12:04:00 /1y
    will yield  2020-01-01T00:00:00

    Similarly   dateround 2019-01-28T12:04:00 /-30m
    will yield  2019-01-28T12:00:00

The superdivision of years are millennia, i.e. there's 1000 years,
500 biennia, 100 decades, etc. in a millenium.


Multiple RNDSPECs are evaluated left to right.

Note that rounding isn't commutative, e.g.
	dateround 2012-03-01 Sat Sep -> 2012-09-03
vs.
	dateround 2012-03-01 Sep Sat -> 2012-09-01

Note that non-numeric strings prefixed with a `-' conflict with the command
line options and a separating `--' has to be used.

  -h, --help                 Print help and exit
  -V, --version              Print version and exit
  -q, --quiet                Suppress message about date/time and duration
                             parser errors and fix-ups.
                             The default is to print a warning or the
                             fixed up value and return error code 2.
  -f, --format=STRING        Output format.  This can either be a specifier
                               string (similar to strftime()'s FMT) or the name
                               of a calendar.
  -i, --input-format=STRING...  Input format, can be used multiple times.
                               Each date/time will be passed to the input
                               format parsers in the order they are given, if a
                               date/time can be read successfully with a given
                               input format specifier string, that value will
                               be used.
  -b, --base=DT              For underspecified input use DT as a fallback to
                             fill in missing fields.  Also used for ambiguous
                             format specifiers to position their range on the
                             absolute time line.
                             Must be a date/time in ISO8601 format.
                             If omitted defaults to the current date/time.
  -e, --backslash-escapes    Enable interpretation of backslash escapes in the
                               output and input format specifier strings.
  -S, --sed-mode             Copy parts from the input before and after a
                               matching date/time.
                               Note that all occurrences of date/times within a
                               line will be processed.
  -E, --empty-mode           Empty lines that cannot be parsed.
      --locale=LOCALE        Format results according to LOCALE, this would only
                             affect month and weekday names.
      --from-locale=LOCALE   Interpret dates on stdin or the command line as
                             coming from the locale LOCALE, this would only
                             affect month and weekday names as input formats
                             have to be specified explicitly.
      --from-zone=ZONE       Interpret dates on stdin or the command line as
                               coming from the time zone ZONE.
  -z, --zone=ZONE            Convert dates printed on stdout to time zone ZONE,
                               default: UTC.
  -n, --next                 Always round to a different date or time.
